{"version":3,"sources":["ThreeEditor/js/Sidebar.Geometry.ExtrudeGeometry.js"],"names":["GeometryParametersPanel","editor","object","strings","container","UIRow","parameters","geometry","options","curveSegments","undefined","steps","depth","bevelThickness","bevelSize","bevelOffset","bevelSegments","curveSegmentsRow","UIInteger","onChange","update","setRange","Infinity","add","UIText","getKey","setWidth","stepsRow","depthRow","UINumber","enabledRow","enabled","UICheckbox","bevelEnabled","thicknessRow","thickness","sizeRow","size","offsetRow","offset","segmentsRow","segments","button","UIButton","onClick","execute","SetGeometryCommand","THREE","shapes","setMarginLeft","getValue"],"mappings":"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","file":"static/js/7.eab2ea4a.chunk.js","sourcesContent":["import * as THREE from 'three'\r\n\r\nimport { UIRow, UIText, UIInteger, UICheckbox, UIButton, UINumber } from './libs/ui.js';\r\n\r\nimport { SetGeometryCommand } from './commands/SetGeometryCommand.js';\r\n\r\nfunction GeometryParametersPanel( editor, object ) {\r\n\r\n\tvar strings = editor.strings;\r\n\r\n\tvar container = new UIRow();\r\n\r\n\tvar geometry = object.geometry;\r\n\tvar parameters = geometry.parameters;\r\n\tvar options = parameters.options;\r\n\toptions.curveSegments = options.curveSegments != undefined ? options.curveSegments : 12;\r\n\toptions.steps = options.steps != undefined ? options.steps : 1;\r\n\toptions.depth = options.depth != undefined ? options.depth : 100;\r\n\toptions.bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\r\n\toptions.bevelSize = options.bevelSize !== undefined ? options.bevelSize : 4;\r\n\toptions.bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\r\n\toptions.bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\r\n\r\n\t// curveSegments\r\n\r\n\tvar curveSegmentsRow = new UIRow();\r\n\tvar curveSegments = new UIInteger( options.curveSegments ).onChange( update ).setRange( 1, Infinity );\r\n\r\n\tcurveSegmentsRow.add( new UIText( strings.getKey( 'sidebar/geometry/extrude_geometry/curveSegments' ) ).setWidth( '90px' ) );\r\n\tcurveSegmentsRow.add( curveSegments );\r\n\r\n\tcontainer.add( curveSegmentsRow );\r\n\r\n\t// steps\r\n\r\n\tvar stepsRow = new UIRow();\r\n\tvar steps = new UIInteger( options.steps ).onChange( update ).setRange( 1, Infinity );\r\n\r\n\tstepsRow.add( new UIText( strings.getKey( 'sidebar/geometry/extrude_geometry/steps' ) ).setWidth( '90px' ) );\r\n\tstepsRow.add( steps );\r\n\r\n\tcontainer.add( stepsRow );\r\n\r\n\t// depth\r\n\r\n\tvar depthRow = new UIRow();\r\n\tvar depth = new UINumber( options.depth ).onChange( update ).setRange( 1, Infinity );\r\n\r\n\tdepthRow.add( new UIText( strings.getKey( 'sidebar/geometry/extrude_geometry/depth' ) ).setWidth( '90px' ) );\r\n\tdepthRow.add( depth );\r\n\r\n\tcontainer.add( depthRow );\r\n\r\n\t// enabled\r\n\r\n\tvar enabledRow = new UIRow();\r\n\tvar enabled = new UICheckbox( options.bevelEnabled ).onChange( update );\r\n\r\n\tenabledRow.add( new UIText( strings.getKey( 'sidebar/geometry/extrude_geometry/bevelEnabled' ) ).setWidth( '90px' ) );\r\n\tenabledRow.add( enabled );\r\n\r\n\tcontainer.add( enabledRow );\r\n\r\n\tif ( options.bevelEnabled === true ) {\r\n\r\n\t\t// thickness\r\n\r\n\t\tvar thicknessRow = new UIRow();\r\n\t\tvar thickness = new UINumber( options.bevelThickness ).onChange( update );\r\n\r\n\t\tthicknessRow.add( new UIText( strings.getKey( 'sidebar/geometry/extrude_geometry/bevelThickness' ) ).setWidth( '90px' ) );\r\n\t\tthicknessRow.add( thickness );\r\n\r\n\t\tcontainer.add( thicknessRow );\r\n\r\n\t\t// size\r\n\r\n\t\tvar sizeRow = new UIRow();\r\n\t\tvar size = new UINumber( options.bevelSize ).onChange( update );\r\n\r\n\t\tsizeRow.add( new UIText( strings.getKey( 'sidebar/geometry/extrude_geometry/bevelSize' ) ).setWidth( '90px' ) );\r\n\t\tsizeRow.add( size );\r\n\r\n\t\tcontainer.add( sizeRow );\r\n\r\n\t\t// offset\r\n\r\n\t\tvar offsetRow = new UIRow();\r\n\t\tvar offset = new UINumber( options.bevelOffset ).onChange( update );\r\n\r\n\t\toffsetRow.add( new UIText( strings.getKey( 'sidebar/geometry/extrude_geometry/bevelOffset' ) ).setWidth( '90px' ) );\r\n\t\toffsetRow.add( offset );\r\n\r\n\t\tcontainer.add( offsetRow );\r\n\r\n\t\t// segments\r\n\r\n\t\tvar segmentsRow = new UIRow();\r\n\t\tvar segments = new UIInteger( options.bevelSegments ).onChange( update ).setRange( 0, Infinity );\r\n\r\n\t\tsegmentsRow.add( new UIText( strings.getKey( 'sidebar/geometry/extrude_geometry/bevelSegments' ) ).setWidth( '90px' ) );\r\n\t\tsegmentsRow.add( segments );\r\n\r\n\t\tcontainer.add( segmentsRow );\r\n\r\n\t}\r\n\r\n\tvar button = new UIButton( strings.getKey( 'sidebar/geometry/extrude_geometry/shape' ) ).onClick( toShape ).setWidth( '90px' ).setMarginLeft( '90px' );\r\n\tcontainer.add( button );\r\n\r\n\t//\r\n\r\n\tfunction update() {\r\n\r\n\t\teditor.execute( new SetGeometryCommand( editor, object, new THREE.ExtrudeGeometry(\r\n\t\t\tparameters.shapes,\r\n\t\t\t{\r\n\t\t\t\tcurveSegments: curveSegments.getValue(),\r\n\t\t\t\tsteps: steps.getValue(),\r\n\t\t\t\tdepth: depth.getValue(),\r\n\t\t\t\tbevelEnabled: enabled.getValue(),\r\n\t\t\t\tbevelThickness: thickness !== undefined ? thickness.getValue() : options.bevelThickness,\r\n\t\t\t\tbevelSize: size !== undefined ? size.getValue() : options.bevelSize,\r\n\t\t\t\tbevelOffset: offset !== undefined ? offset.getValue() : options.bevelOffset,\r\n\t\t\t\tbevelSegments: segments !== undefined ? segments.getValue() : options.bevelSegments\r\n\t\t\t}\r\n\t\t) ) );\r\n\r\n\t}\r\n\r\n\tfunction toShape() {\r\n\r\n\t\teditor.execute( new SetGeometryCommand( editor, object, new THREE.ShapeGeometry(\r\n\t\t\tparameters.shapes,\r\n\t\t\toptions.curveSegments\r\n\t\t) ) );\r\n\r\n\t}\r\n\r\n\treturn container;\r\n\r\n}\r\n\r\nexport { GeometryParametersPanel };\r\n"],"sourceRoot":""}